---
AWSTemplateFormatVersion: 2010-09-09
Description: 'Cloudformation for provisioning roles and policies required to setup the CI/CD using GitHub actions and CodeDeploy. Also sets up CodeDeploy Application and Deployment Groups (dev, stage, prod)'
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: 'Github configurations'
        Parameters:
          - GithubRepoName
          - ThumbprintList
Parameters:
  ThumbprintList:
    Type: String
    Default: 6938fd4d98bab03faadb97b34396831e3780aea1
    Description: A thumbprint of an Open ID Connector is a SHA1 hash of the public certificate of the host
  GithubRepoName:
    Description: Please specify the GitHub repository containing your Drupal application. Must be one of GitHubUser/GitHubRepository
    Type: String
    Default: jbirkhimer/drupal-github-aws-ci-cd-testing
    AllowedPattern: ^((?!.*--)(?!.*-/)[a-zA-Z0-9][a-zA-Z0-9_-]{1,38})/([a-zA-Z\d-_.]{1,100})$
    ConstraintDescription: Must be one of GitHubUser/GitHubRepository

Resources:

  CodeDeployWebappRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      RoleName: CodeDeployWebappRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
                - codedeploy.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore'
  CodeDeployWebappRolePolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CodeDeployWebappRole
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - 'autoscaling:Describe*'
              - 'cloudformation:Describe*'
              - 'cloudformation:GetTemplate'
              - 's3:Get*'
            Resource: '*'
      Roles:
        - !Ref CodeDeployWebappRole

  OIDCProvider:
      Type: AWS::IAM::OIDCProvider
      Properties:
          Url: 'https://token.actions.githubusercontent.com'
          ClientIdList:
            - 'sts.amazonaws.com'
          ThumbprintList:
             - !Ref ThumbprintList
  GitHubIAMRole:
      Type: AWS::IAM::Role
      Properties:
          Path: '/'
          RoleName: CodeDeployRoleforGitHub
          AssumeRolePolicyDocument:
             Statement:
               - Effect: Allow
                 Action: sts:AssumeRoleWithWebIdentity
                 Principal:
                   Federated: !Ref OIDCProvider
                 Condition:
                   StringLike:
                     token.actions.githubusercontent.com:sub: !Sub repo:${GithubRepoName}:*
          MaxSessionDuration: 3600
          Description: 'Github Actions role'
          Policies:
            - PolicyName: 'CodeDeployRoleforGitHub-policy'
              PolicyDocument:
                Version: '2012-10-17'
                Statement:
                - Effect: Allow
                  Action:
                  - 'codedeploy:Get*'
                  - 'codedeploy:Batch*'
                  - 'codedeploy:CreateDeployment'
                  - 'codedeploy:RegisterApplicationRevision'
                  - 'codedeploy:List*'
                  Resource:
                    - !Sub 'arn:${AWS::Partition}:codedeploy:*:${AWS::AccountId}:*'

  WebappApplication:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: !Select [1, !Split ['/', !Ref GithubRepoName]]
  WebappDeploymentGroupDev:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      ApplicationName: !Ref WebappApplication
      ServiceRoleArn: !GetAtt CodeDeployRole.Arn
      DeploymentConfigName: CodeDeployDefault.OneAtATime
      DeploymentGroupName: dev
      Ec2TagSet:
        Ec2TagSetList:
          - Ec2TagGroup:
              - Key: ApplicationName
                Value: !Ref WebappApplication
                Type: KEY_AND_VALUE
          - Ec2TagGroup:
              - Key: Environment
                Value: dev
                Type: KEY_AND_VALUE
      AutoRollbackConfiguration:
          Enabled: true
          Events:
            - DEPLOYMENT_FAILURE
            - DEPLOYMENT_STOP_ON_REQUEST
  WebappDeploymentGroupStage:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      ApplicationName: !Ref WebappApplication
      ServiceRoleArn: !GetAtt CodeDeployRole.Arn
      DeploymentConfigName: CodeDeployDefault.OneAtATime
      DeploymentGroupName: stage
      Ec2TagSet:
        Ec2TagSetList:
          - Ec2TagGroup:
              - Key: ApplicationName
                Value: !Ref WebappApplication
                Type: KEY_AND_VALUE
          - Ec2TagGroup:
              - Key: Environment
                Value: stage
                Type: KEY_AND_VALUE
      AutoRollbackConfiguration:
          Enabled: true
          Events:
            - DEPLOYMENT_FAILURE
            - DEPLOYMENT_STOP_ON_REQUEST
  WebappDeploymentGroupProd:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      ApplicationName: !Ref WebappApplication
      ServiceRoleArn: !GetAtt CodeDeployRole.Arn
      DeploymentConfigName: CodeDeployDefault.OneAtATime
      DeploymentGroupName: prod
      Ec2TagSet:
        Ec2TagSetList:
          - Ec2TagGroup:
              - Key: ApplicationName
                Value: !Ref WebappApplication
                Type: KEY_AND_VALUE
          - Ec2TagGroup:
              - Key: Environment
                Value: prod
                Type: KEY_AND_VALUE
      AutoRollbackConfiguration:
          Enabled: true
          Events:
            - DEPLOYMENT_FAILURE
            - DEPLOYMENT_STOP_ON_REQUEST

  CodeDeployRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CodeDeployRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service:
                - 'codedeploy.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      Path: '/'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole
      Policies:
        - PolicyName: allow-autoscaling
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ec2:RunInstances
                  - ec2:CreateTags
                  - iam:PassRole
                Resource:
                  - !Sub 'arn:${AWS::Partition}:codedeploy:*:${AWS::AccountId}:*'

Outputs:

  DeploymentGroupDev:
    Description: Webapp Deployment Group (DEV)
    Value: !Ref WebappDeploymentGroupDev
  DeploymentGroupStage:
    Description: Webapp Deployment Group (STAGE)
    Value: !Ref WebappDeploymentGroupStage
  DeploymentGroupProd:
    Description: Webapp Deployment Group (PROD)
    Value: !Ref WebappDeploymentGroupProd
  ApplicationName:
    Description: CodeDeploy Application name
    Value: !Ref WebappApplication
  GithubIAMRoleArn:
    Description: IAM role for GitHub
    Value: !GetAtt GitHubIAMRole.Arn
